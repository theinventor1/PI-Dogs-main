{"ast":null,"code":"var _jsxFileName = \"/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Cards/Cards.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Card from \"../Card/Card\";\nimport { Conx } from './styled.Cards.js';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards(props) {\n  _s();\n  /**redux estado global , disponible para los componentes que lo necesiten */\n  /**redux nos entrega un un paquete de informacion en el estado global , que queda a \n   * disposicion de cualquier parte de la aplicacion que lo necesite\n    EL ESTADO GLOBAL ES UN OBJETO  \n    { perros :[arr de perros] }\n   reducer:  el unico que puede cambiar cosas em el ESTADO GLOBAL es el reducer. \n   Cards (conteneder de card) va a estar mirando el estado global  \n    */\n\n  const perros = useSelector(state => state.perros2);\n\n  /**paginacion */\n  const {\n    losperros,\n    onClose,\n    currentPage,\n    cardsPerPage\n  } = props;\n  // Calcula el índice inicial y final de las tarjetas a mostrar según la página actual\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  // const currentCards = losperros.slice(indexOfFirstCard, indexOfLastCard);\n  const currentCards = perros.slice(indexOfFirstCard, indexOfLastCard);\n  return /*#__PURE__*/_jsxDEV(Conx, {\n    children: currentCards === null || currentCards === void 0 ? void 0 : currentCards.map(perros => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: perros.id,\n        image: perros.urlimagen,\n        name: perros.name\n        // height={perro.height}\n        // weight={perro.weight}\n        ,\n        life_span: perros.life_span,\n        temperament: perros.temperament,\n        onClose: onClose /** funcion anónima no va */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 4\n  }, this);\n}\n_s(Cards, \"qPViGxlHCSmtNs57LX63MK3E3QI=\", false, function () {\n  return [useSelector];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Card","Conx","useSelector","jsxDEV","_jsxDEV","Cards","props","_s","perros","state","perros2","losperros","onClose","currentPage","cardsPerPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","children","map","id","image","urlimagen","name","life_span","temperament","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Cards/Cards.jsx"],"sourcesContent":["import React from 'react';\nimport Card from \"../Card/Card\";\nimport {Conx } from './styled.Cards.js';\nimport { useSelector } from 'react-redux';\n function Cards(props) {  \n  \n  /**redux estado global , disponible para los componentes que lo necesiten */\n  /**redux nos entrega un un paquete de informacion en el estado global , que queda a \n   * disposicion de cualquier parte de la aplicacion que lo necesite\n    EL ESTADO GLOBAL ES UN OBJETO  \n    { perros :[arr de perros] }\n   reducer:  el unico que puede cambiar cosas em el ESTADO GLOBAL es el reducer. \n   Cards (conteneder de card) va a estar mirando el estado global  \n    */\n\n   const perros = useSelector(state=>state.perros2);\n\n  /**paginacion */\n  const { losperros, onClose , currentPage, cardsPerPage  } = props;\n  // Calcula el índice inicial y final de las tarjetas a mostrar según la página actual\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  // const currentCards = losperros.slice(indexOfFirstCard, indexOfLastCard);\n  const currentCards = perros.slice(indexOfFirstCard, indexOfLastCard);\n  return (  \n   <Conx >\n  { currentCards?.map( (perros) => {\n  return (\n   <Card\n     id={perros.id}\n     image={perros.urlimagen}    \n     name={perros.name}\n     // height={perro.height}\n     // weight={perro.weight}\n     life_span={perros.life_span}\n     temperament={perros.temperament}        \n     onClose={ onClose }      /** funcion anónima no va */\n   />\n  );\n   }) }\n   </Conx>    \n  )\n}\nexport default Cards;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAAQC,IAAI,QAAQ,mBAAmB;AACvC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;;EAEG,MAAMC,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,OAAO,CAAC;;EAEjD;EACA,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAGC,WAAW;IAAEC;EAAc,CAAC,GAAGR,KAAK;EACjE;EACA,MAAMS,eAAe,GAAGF,WAAW,GAAGC,YAAY;EAClD,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EACvD;EACA,MAAMG,YAAY,GAAGT,MAAM,CAACU,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EACpE,oBACCX,OAAA,CAACH,IAAI;IAAAkB,QAAA,EACJF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,GAAG,CAAGZ,MAAM,IAAK;MACjC,oBACCJ,OAAA,CAACJ,IAAI;QACHqB,EAAE,EAAEb,MAAM,CAACa,EAAG;QACdC,KAAK,EAAEd,MAAM,CAACe,SAAU;QACxBC,IAAI,EAAEhB,MAAM,CAACgB;QACb;QACA;QAAA;QACAC,SAAS,EAAEjB,MAAM,CAACiB,SAAU;QAC5BC,WAAW,EAAElB,MAAM,CAACkB,WAAY;QAChCd,OAAO,EAAGA,OAAS,CAAM;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAEF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEV;AAACvB,EAAA,CAtCSF,KAAK;EAAA,QAWGH,WAAW;AAAA;AAAA6B,EAAA,GAXnB1B,KAAK;AAuCf,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}