{"ast":null,"code":"var _jsxFileName = \"/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Homer/Homeredux.jsx\",\n  _s = $RefreshSig$();\nimport Cardsredux from '../Cards/Cardsredux';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, connect } from 'react-redux';\n/** importar las action que vamos a invocar */\nimport { getPerros, getPerro, orderCards } from '../../redux/actions';\nimport { AppCont } from '../../styledCompApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar deparray = [];\nconst Homeredux = props => {\n  _s();\n  const dispatch = useDispatch();\n\n  /**paginacion */\n  const [curPag, setCurPag] = useState(1); // Página actual\n  const cardsxPag = 6; // Número de tarjetas por página\n  /**fin paginacion */\n\n  useEffect(() => {\n    console.log('useEffect:', props.perros2);\n  }, []);\n\n  // let  perros2 = useSelector(state => state.perros2); /**react-redux */ \n  console.log('perros2:', props.state);\n  const obtieneTodos = () => {\n    dispatch(getPerros());\n    console.log('obtieneTodos:');\n  };\n  const obtieneUno = () => {\n    // dispatch(getPerro(2));   \n    console.log('obtieneUno:');\n    for (let i = 1; i < 14; i++) {\n      dispatch(getPerro(i));\n    }\n  };\n\n  /**hago dispatch de la ejecucion de un action creator */\n  //const handleOrder  = (evento) => { dispatch ( orderCards(evento.target.value))  }\n\n  // const totalPages = Math.ceil(perros2.length / cardsxPag);\n  // const totalPages = 5;\n\n  return /*#__PURE__*/_jsxDEV(AppCont, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SELECCION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: obtieneTodos,\n        children: \" - BOTON TODOS - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: obtieneUno,\n        children: \" - BOTON UNO - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Cardsredux, {\n      losperros: props.perros2,\n      currentPage: curPag,\n      cardsPerPage: cardsxPag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 2\n  }, this);\n};\n_s(Homeredux, \"HxVt6NPOeNka82JriEIAvW25qbQ=\", false, function () {\n  return [useDispatch];\n});\n_c = Homeredux;\nconst mapStateToProps = state => {\n  return {\n    perros2: state.perros2\n  };\n};\nexport default connect(mapStateToProps, null)(Homeredux);\nvar _c;\n$RefreshReg$(_c, \"Homeredux\");","map":{"version":3,"names":["Cardsredux","React","useState","useEffect","useDispatch","useSelector","connect","getPerros","getPerro","orderCards","AppCont","jsxDEV","_jsxDEV","deparray","Homeredux","props","_s","dispatch","curPag","setCurPag","cardsxPag","console","log","perros2","state","obtieneTodos","obtieneUno","i","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","losperros","currentPage","cardsPerPage","_c","mapStateToProps","$RefreshReg$"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Homer/Homeredux.jsx"],"sourcesContent":["import Cardsredux from '../Cards/Cardsredux';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector, connect } from 'react-redux';\n/** importar las action que vamos a invocar */\nimport { getPerros, getPerro, orderCards } from '../../redux/actions';\n\nimport { AppCont } from '../../styledCompApp';\nvar deparray = [];\n\nconst  Homeredux = (props) => {\n   const dispatch = useDispatch();   \n\n   /**paginacion */\n   const [ curPag, setCurPag ] = useState(1); // Página actual\n   const cardsxPag = 6; // Número de tarjetas por página\n   /**fin paginacion */ \n\n   useEffect( \n      () => {         \n       console.log('useEffect:', props.perros2);  \n       }, [] );\n\n   // let  perros2 = useSelector(state => state.perros2); /**react-redux */ \n    console.log('perros2:', props.state)\n  \n   const obtieneTodos = () =>{\n\n     dispatch(getPerros());\n     console.log('obtieneTodos:');        \n   }\n\n   const obtieneUno = () =>{\n    // dispatch(getPerro(2));   \n     console.log('obtieneUno:'); \n     for (let i=1; i<14 ; i++)\n     {\n      dispatch(getPerro(i));\n     }\n   }\n\n/**hago dispatch de la ejecucion de un action creator */\n  //const handleOrder  = (evento) => { dispatch ( orderCards(evento.target.value))  }\n\n   \n   // const totalPages = Math.ceil(perros2.length / cardsxPag);\n  // const totalPages = 5;\n\n  return (\n <AppCont>\n     {/* { Array.from({ length: totalPages }, (_, index) => (\n        <button key={index + 1} onClick = { \n         () => setCurPag(index + 1) \n         } disabled={curPag === index + 1} > {index + 1} \n        </button>\n           ))}         */}\n    <div>\n      <p>SELECCION</p>\n         <button onClick = { obtieneTodos }> - BOTON TODOS - </button>\n         <button onClick = { obtieneUno }> - BOTON UNO - </button>\n         {/* <select onChange= { handleOrder }>\n                <option value=\"A\">Ascendente</option>\n                <option value=\"D\">Descendente</option>\n          </select>   */}\n    </div> \n    <Cardsredux losperros={props.perros2} currentPage={curPag} cardsPerPage={cardsxPag}  />\n </AppCont>\n  )\n}\nconst mapStateToProps = (state) => {\n return {\n  perros2: state.perros2,\n }\n}\nexport default connect (mapStateToProps,null) (Homeredux);"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,EAAEC,OAAO,QAAQ,aAAa;AAC/D;AACA,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,qBAAqB;AAErE,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9C,IAAIC,QAAQ,GAAG,EAAE;AAEjB,MAAOC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAAEc,MAAM,EAAEC,SAAS,CAAE,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAMkB,SAAS,GAAG,CAAC,CAAC,CAAC;EACrB;;EAEAjB,SAAS,CACN,MAAM;IACLkB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,KAAK,CAACQ,OAAO,CAAC;EACxC,CAAC,EAAE,EAAG,CAAC;;EAEX;EACCF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,KAAK,CAACS,KAAK,CAAC;EAErC,MAAMC,YAAY,GAAGA,CAAA,KAAK;IAExBR,QAAQ,CAACV,SAAS,CAAC,CAAC,CAAC;IACrBc,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAK;IACvB;IACCL,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,KAAK,IAAIK,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,EAAE,EAAGA,CAAC,EAAE,EACxB;MACCV,QAAQ,CAACT,QAAQ,CAACmB,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAEJ;EACE;;EAGC;EACD;;EAEA,oBACDf,OAAA,CAACF,OAAO;IAAAkB,QAAA,gBAOLhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACbpB,OAAA;QAAQqB,OAAO,EAAKR,YAAc;QAAAG,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7DpB,OAAA;QAAQqB,OAAO,EAAKP,UAAY;QAAAE,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKzD,CAAC,eACNpB,OAAA,CAACZ,UAAU;MAACkC,SAAS,EAAEnB,KAAK,CAACQ,OAAQ;MAACY,WAAW,EAAEjB,MAAO;MAACkB,YAAY,EAAEhB;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEX,CAAC;AAAAhB,EAAA,CA1DMF,SAAS;EAAA,QACIV,WAAW;AAAA;AAAAiC,EAAA,GADxBvB,SAAS;AA2DhB,MAAMwB,eAAe,GAAId,KAAK,IAAK;EAClC,OAAO;IACND,OAAO,EAAEC,KAAK,CAACD;EAChB,CAAC;AACF,CAAC;AACD,eAAejB,OAAO,CAAEgC,eAAe,EAAC,IAAI,CAAC,CAAExB,SAAS,CAAC;AAAC,IAAAuB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}