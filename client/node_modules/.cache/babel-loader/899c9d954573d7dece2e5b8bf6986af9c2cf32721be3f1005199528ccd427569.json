{"ast":null,"code":"import perrosx1 from './datadummy';\nimport { GET_PERRO, GET_PERROS, FILTER_BY_SOURCE, ORDER_BY_NAME, ORDER_BY_PESOMIN, ORDER_BY_PESOMAX, AUMENTA_CONTADOR, OBT_USER, SET_PERROS, SET_PERROS2, NAV_BAR } from './actions';\nconst initialState = {\n  contador: 0,\n  perros2: [],\n  users: [],\n  user: {},\n  desaparece: 0\n};\n/**reducer es quien sabe que hacer en el estado global  */\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PERROS:\n      console.log('GET_PERROS');\n      return {\n        ...state,\n        perros2: action.payload\n      };\n    case GET_PERRO:\n      console.log('GET_PERRO payload:', action.payload);\n      return {\n        ...state,\n        perros2: action.payload\n      };\n    case ORDER_BY_PESOMIN:\n      const orderPerro2 = state.perros2.sort((a, b) => {\n        if (action.payload === \"M\") {\n          if (getPesoMin(a) < getPesoMin(b)) return -1;\n          if (getPesoMin(b) < getPesoMin(a)) return 1;\n          return 0;\n        }\n        // DESCENDENTE\n        else {\n          if (getPesoMin(a) < getPesoMin(b)) return 1;\n          if (getPesoMin(b) < getPesoMin(a)) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        perros2: [...orderPerro2]\n      };\n      function getPesoMin(perro) {\n        const [min] = perro.weight.metric.split(\" - \");\n        return parseInt(min);\n      }\n    case ORDER_BY_PESOMAX:\n      const orderPerro2m = state.perros2.sort((a, b) => {\n        if (action.payload === \"M\") {\n          if (getPesoMax(a) < getPesoMax(b)) return -1;\n          if (getPesoMax(b) < getPesoMax(a)) return 1;\n          return 0;\n        }\n        // DESCENDENTE\n        else {\n          if (getPesoMax(a) < getPesoMax(b)) return 1;\n          if (getPesoMax(b) < getPesoMax(a)) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        perros2: [...orderPerro2m]\n      };\n      function getPesoMax(perro) {\n        const [, max] = perro.weight.metric.split(\" - \");\n        return parseInt(max);\n      }\n    case ORDER_BY_NAME:\n      const orderPerro = state.perros2.sort((a, b) => {\n        if (action.payload === \"A\") {\n          if (a.name < b.name) return -1;\n          if (b.name < a.name) return 1;\n          return 0;\n        }\n        // DESCENDENTE\n        else {\n          if (a.name < b.name) return 1;\n          if (b.name < a.name) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        perros2: [...orderPerro]\n      };\n    case AUMENTA_CONTADOR:\n      return {\n        ...state,\n        contador: state.contador + 1\n      };\n    case OBT_USER:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case SET_PERROS:\n      return {\n        perros2: [...state, action.payload]\n      };\n    case SET_PERROS2:\n      return {\n        ...state,\n        perros2: action.payload\n      };\n    default:\n      return {\n        ...state\n      };\n    /** una copia del estado */\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["perrosx1","GET_PERRO","GET_PERROS","FILTER_BY_SOURCE","ORDER_BY_NAME","ORDER_BY_PESOMIN","ORDER_BY_PESOMAX","AUMENTA_CONTADOR","OBT_USER","SET_PERROS","SET_PERROS2","NAV_BAR","initialState","contador","perros2","users","user","desaparece","reducer","state","arguments","length","undefined","action","type","console","log","payload","orderPerro2","sort","a","b","getPesoMin","perro","min","weight","metric","split","parseInt","orderPerro2m","getPesoMax","max","orderPerro","name"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import perrosx1 from './datadummy';\n\nimport { GET_PERRO, GET_PERROS, FILTER_BY_SOURCE, ORDER_BY_NAME, ORDER_BY_PESOMIN, ORDER_BY_PESOMAX, AUMENTA_CONTADOR, OBT_USER, SET_PERROS, SET_PERROS2, NAV_BAR } from './actions';\n\nconst initialState = {  \n contador: 0,\n perros2 : [],\n users: [],\n user:{},\n desaparece:0\n}\n/**reducer es quien sabe que hacer en el estado global  */\n\nconst reducer = (state = initialState, action) => {\n switch(action.type){\n  case GET_PERROS:\n   console.log('GET_PERROS');\n   return { ...state, perros2: action.payload  };\n\n  case GET_PERRO:\n   console.log('GET_PERRO payload:', action.payload);\n   return { ...state, perros2: action.payload } \n\n   \n\n   case ORDER_BY_PESOMIN:\n   const orderPerro2 = state.perros2.sort((a, b)=> {\n    if(action.payload === \"M\") {\n    if(getPesoMin(a) < getPesoMin(b) ) return -1;\n    if(getPesoMin(b) < getPesoMin(a)) return 1\n    return 0  }\n       // DESCENDENTE\n    else {\n      if(getPesoMin(a) < getPesoMin(b)) return 1\n      if(getPesoMin(b) < getPesoMin(a)) return - 1\n     return 0  }  \n      })\n     return { ...state,   perros2: [...orderPerro2] }\n\n     function getPesoMin(perro) {\n      const [min] = perro.weight.metric.split(\" - \");\n      return parseInt(min);\n    }\n    \n\n    case ORDER_BY_PESOMAX:\n     const orderPerro2m = state.perros2.sort((a, b)=> {\n      if(action.payload === \"M\") {\n      if(getPesoMax(a) < getPesoMax(b) ) return -1;\n      if(getPesoMax(b) < getPesoMax(a)) return 1\n      return 0  }\n         // DESCENDENTE\n    else {\n        if(getPesoMax(a) < getPesoMax(b)) return 1\n        if(getPesoMax(b) < getPesoMax(a)) return - 1\n       return 0  }  \n        })\n     return { ...state,   perros2: [...orderPerro2m] }\n\n    function getPesoMax(perro) {\n      const [, max] = perro.weight.metric.split(\" - \");\n      return parseInt(max);\n    }\n\n\n\n   case ORDER_BY_NAME:\n     const orderPerro = state.perros2.sort( (a, b)=> {\n      if(action.payload === \"A\") {\n          if(a.name < b.name ) return -1;\n          if(b.name < a.name) return 1\n          return 0  }\n      // DESCENDENTE\n      else {\n          if(a.name < b.name) return 1\n          if(b.name < a.name) return - 1\n          return 0  }  \n    })\n    return { ...state,   perros2: [...orderPerro] }\n   \n\n    case AUMENTA_CONTADOR:\n        return { ...state,  contador: state.contador + 1  }\n\n    \n    case OBT_USER:\n        return { ...state, users: action.payload  }\n\n    case SET_PERROS:\n        return {  perros2: [...state, action.payload] }\n    \n    case SET_PERROS2:\n        return { ...state,  perros2: action.payload  };\n\n\n     default:\n        return { ...state   };  /** una copia del estado */\n }\n};\n\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}