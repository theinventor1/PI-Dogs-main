{"ast":null,"code":"var _jsxFileName = \"/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Cards/Cards.jsx\";\nimport React from 'react';\nimport Card from \"../Card/Card\";\nimport { Conx } from './styled.Cards.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards(props) {\n  /**redux estado global , disponible para los componentes que lo necesiten */\n  /**redux nos entrega un paquete de informacion en el estado global , que queda a disposicion de cualquier parte de la aplicacion que lo necesite\n  EL ESTADO GLOBAL ES UN OBJETO  \n  { perros :[arr de perros] }\n  reducer:  el unico que puede cambiar cosas en el ESTADO GLOBAL es el reducer. \n  Cards (conteneder de card) va a estar mirando el estado global */\n  //const perros = useSelector(state=>state.perros2); /** mirando ... */\n\n  /**paginacion */\n  const {\n    losperros,\n    onClose,\n    currentPage,\n    cardsPerPage\n  } = props;\n  // Calcula el índice inicial y final de las tarjetas a mostrar según la página actual\n\n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  const currentCards = losperros.slice(indexOfFirstCard, indexOfLastCard);\n\n  // const currentCards = perros.slice(indexOfFirstCard, indexOfLastCard);\n\n  return /*#__PURE__*/_jsxDEV(Conx, {\n    children: currentCards === null || currentCards === void 0 ? void 0 : currentCards.map(perros => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: perros.id,\n        image: perros.urlimagen,\n        name: perros.name,\n        weight: perros.weight,\n        height: perros.height,\n        life_span: perros.life_span,\n        temperament: perros.temperament,\n        onClose: onClose /** funcion anónima no va */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 4\n  }, this);\n}\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Card","Conx","jsxDEV","_jsxDEV","Cards","props","losperros","onClose","currentPage","cardsPerPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","children","map","perros","id","image","urlimagen","name","weight","height","life_span","temperament","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/components/Cards/Cards.jsx"],"sourcesContent":["import React from 'react';\nimport Card from \"../Card/Card\";\nimport {Conx } from './styled.Cards.js';\n\n function Cards(props) {    \n  /**redux estado global , disponible para los componentes que lo necesiten */\n  /**redux nos entrega un paquete de informacion en el estado global , que queda a disposicion de cualquier parte de la aplicacion que lo necesite\n EL ESTADO GLOBAL ES UN OBJETO  \n { perros :[arr de perros] }\n reducer:  el unico que puede cambiar cosas en el ESTADO GLOBAL es el reducer. \n Cards (conteneder de card) va a estar mirando el estado global */\n   //const perros = useSelector(state=>state.perros2); /** mirando ... */\n\n  /**paginacion */\n  const { losperros, onClose , currentPage, cardsPerPage  } = props;\n  // Calcula el índice inicial y final de las tarjetas a mostrar según la página actual\n  \n  const indexOfLastCard = currentPage * cardsPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n\n  const currentCards = losperros.slice(indexOfFirstCard, indexOfLastCard);\n\n  // const currentCards = perros.slice(indexOfFirstCard, indexOfLastCard);\n\n  return (  \n   <Conx >\n  { currentCards?.map( (perros) => {\n  return (\n   <Card  \n     id={perros.id}\n     image={perros.urlimagen}    \n     name={perros.name}     \n     weight={perros.weight}\n     height={perros.height}\n     life_span={perros.life_span}\n     temperament={perros.temperament}        \n     onClose={ onClose }      /** funcion anónima no va */\n   />\n  );\n   }) }\n   </Conx>    \n  )\n}\nexport default Cards;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAAQC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,KAAKA,CAACC,KAAK,EAAE;EACrB;EACA;AACF;AACA;AACA;AACA;EACG;;EAED;EACA,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAGC,WAAW;IAAEC;EAAc,CAAC,GAAGJ,KAAK;EACjE;;EAEA,MAAMK,eAAe,GAAGF,WAAW,GAAGC,YAAY;EAClD,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EAEvD,MAAMG,YAAY,GAAGN,SAAS,CAACO,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEvE;;EAEA,oBACCP,OAAA,CAACF,IAAI;IAAAa,QAAA,EACJF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,GAAG,CAAGC,MAAM,IAAK;MACjC,oBACCb,OAAA,CAACH,IAAI;QACHiB,EAAE,EAAED,MAAM,CAACC,EAAG;QACdC,KAAK,EAAEF,MAAM,CAACG,SAAU;QACxBC,IAAI,EAAEJ,MAAM,CAACI,IAAK;QAClBC,MAAM,EAAEL,MAAM,CAACK,MAAO;QACtBC,MAAM,EAAEN,MAAM,CAACM,MAAO;QACtBC,SAAS,EAAEP,MAAM,CAACO,SAAU;QAC5BC,WAAW,EAAER,MAAM,CAACQ,WAAY;QAChCjB,OAAO,EAAGA,OAAS,CAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAEF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEV;AAACC,EAAA,GAtCSzB,KAAK;AAuCf,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}