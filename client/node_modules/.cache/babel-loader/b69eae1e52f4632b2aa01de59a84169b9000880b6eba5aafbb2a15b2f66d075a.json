{"ast":null,"code":"import axios from 'axios';\nexport const GET_PERROS = \"GET_PERROS\";\nexport const GET_PERRO = \"GET_PERRO\";\nexport const FILTER_BY_SOURCE = \"FILTER_BY_SOURCE\";\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\nexport const ORDER_BY_PESO = \"ORDER_BY_PESO\";\nexport const AUMENTA_CONTADOR = \"AUMENTA_CONTADOR\";\nexport const OBT_TEMPS = \"OBT_TEMPS\";\nexport const OBT_USER = \"OBT_USER\";\nexport const ON_FILTRO = \"ON_FILTRO\";\nexport const ON_ID = \"ON_ID\";\nexport const ON_PESO = \"ON_PESO\";\nexport const SET_PERROS = \"SET_PERROS\";\nexport const SET_PERROS2 = \"SET_PERROS2\";\nconst port = 3001;\nexport const getPerrosall = () => {\n  console.log('actions getPerros');\n  return async dispatch => {\n    const apiData = await axios.get(`http://localhost:${port}/dogs`);\n    const perros2 = apiData.data;\n    //console.log('getPerros() :',perros2,'.');\n    dispatch({\n      type: GET_PERROS,\n      payload: perros2\n    });\n  };\n};\nexport const getPerro = id => {\n  console.log('actions getPerro');\n  return async dispatch => {\n    //console.log('entrasi');\n    const apiData = await axios.get(`http://localhost:${port}/dogs/${id}`);\n    const elperro = apiData.data; /**encapsulo el objeto en corchetes asi queda en un array */\n    //console.log('getPerro():',elperro);\n    dispatch({\n      type: GET_PERRO,\n      payload: elperro\n    });\n  };\n};\nexport const getPerro2 = id => {\n  console.log('actions getPerro2');\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:${port}/dogs/${id}`);\n      if (response.status === 404) {\n        throw new Error('El perro no fue encontrado');\n      }\n      const elperro = await response.json();\n      dispatch({\n        type: GET_PERRO,\n        payload: elperro\n      });\n    } catch (error) {\n      console.error(error);\n      alert('Error al obtener el perro');\n    }\n    ;\n  };\n};\nexport const orderCardsName = order => {\n  console.log('actions orderCards:', order);\n  return {\n    type: ORDER_BY_NAME,\n    payload: order\n  };\n};\nexport const onFiltroPeso = order => {\n  console.log('actions onFiltroPeso:', order);\n  return {\n    type: ORDER_BY_PESOMIN,\n    payload: order\n  };\n};\nexport const filterBySource = name => {\n  console.log('actions filterBySource');\n  return {\n    type: \"FILTER_BY_SOURCE\",\n    payload: name\n  };\n};\nexport const aumentarContador = () => {\n  return {\n    type: AUMENTA_CONTADOR\n  };\n};\nexport const getTemps = () => {\n  return function (dispatch) {\n    fetch('http://localhost:3001/temperaments').then(response => response.json()).then(data => dispatch({\n      type: OBT_TEMPS,\n      payload: data\n    }));\n  };\n};\nexport const seteaPerrosX = perros => {\n  console.log('payload actions: ', perros, '.');\n  return {\n    type: 'SET_PERROS',\n    payload: perros\n  };\n};\nexport const filtrarPerros = idperro => {\n  return async dispatch => {\n    try {\n      console.log('actions filtrarPerros:', idperro);\n      const arreglo = await axios.get(`http://localhost:${port}/dogtemp/${idperro}`);\n      console.log('arreglo actions', arreglo, '.');\n      if (arreglo) {\n        const perrosResultantes = [];\n        const promises = arreglo.data.map(id => axios(`http://localhost:${port}/dogs/${id}`).then(_ref => {\n          let {\n            data\n          } = _ref;\n          perrosResultantes.push(data);\n        }).catch(error => {\n          console.error(`Error ID ${idperro}:`, error);\n        }));\n        await Promise.all(promises);\n        dispatch(setPerros2(perrosResultantes));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const setPerros2 = perros => {\n  return {\n    type: 'SET_PERROS2',\n    payload: perros\n  };\n};\nexport const onFiltroId = () => {\n  return function (dispatch) {};\n};","map":{"version":3,"names":["axios","GET_PERROS","GET_PERRO","FILTER_BY_SOURCE","ORDER_BY_NAME","ORDER_BY_PESO","AUMENTA_CONTADOR","OBT_TEMPS","OBT_USER","ON_FILTRO","ON_ID","ON_PESO","SET_PERROS","SET_PERROS2","port","getPerrosall","console","log","dispatch","apiData","get","perros2","data","type","payload","getPerro","id","elperro","getPerro2","response","fetch","status","Error","json","error","alert","orderCardsName","order","onFiltroPeso","ORDER_BY_PESOMIN","filterBySource","name","aumentarContador","getTemps","then","seteaPerrosX","perros","filtrarPerros","idperro","arreglo","perrosResultantes","promises","map","_ref","push","catch","Promise","all","setPerros2","onFiltroId"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\nexport const GET_PERROS = \"GET_PERROS\";\nexport const GET_PERRO = \"GET_PERRO\";\nexport const FILTER_BY_SOURCE = \"FILTER_BY_SOURCE\";\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\nexport const ORDER_BY_PESO = \"ORDER_BY_PESO\";\n\nexport const AUMENTA_CONTADOR = \"AUMENTA_CONTADOR\";\nexport const OBT_TEMPS = \"OBT_TEMPS\";\nexport const OBT_USER  = \"OBT_USER\";\nexport const ON_FILTRO = \"ON_FILTRO\";\nexport const ON_ID     = \"ON_ID\";\nexport const ON_PESO   = \"ON_PESO\";\nexport const SET_PERROS  = \"SET_PERROS\";\nexport const SET_PERROS2 = \"SET_PERROS2\";\n\nconst port=3001;\n\nexport const getPerrosall = () => {\n console.log('actions getPerros');\n return async (dispatch) => {\n   const apiData = await axios.get(`http://localhost:${port}/dogs`);\n   const perros2 = apiData.data;\n   //console.log('getPerros() :',perros2,'.');\n   dispatch({type:GET_PERROS, payload: perros2 });\n };\n};\n\nexport const getPerro = (id) => {\n console.log('actions getPerro');\n return async (dispatch) => {\n   //console.log('entrasi');\n   const apiData = await axios.get(`http://localhost:${port}/dogs/${id}`);\n   const elperro = apiData.data; /**encapsulo el objeto en corchetes asi queda en un array */\n   //console.log('getPerro():',elperro);\n   dispatch( { type:GET_PERRO, payload: elperro } );\n };\n}; \n\nexport const getPerro2 = (id) => {\n console.log('actions getPerro2');\n return async (dispatch) => {\n try { \n const response = await fetch(`http://localhost:${port}/dogs/${id}`);      \n if (response.status === 404) { throw new Error('El perro no fue encontrado'); }\n      const elperro = await response.json();\n      dispatch({ type: GET_PERRO, payload: elperro });\n   } \n catch (error) {\n      console.error(error);\n      alert('Error al obtener el perro');\n   };\n };\n};\n\nexport const orderCardsName = (order)=> {\n console.log('actions orderCards:', order);\n return {\n      type: ORDER_BY_NAME,\n      payload: order\n        };\n};\n\nexport const onFiltroPeso = (order) => {\n console.log('actions onFiltroPeso:', order);\n return {\n      type: ORDER_BY_PESOMIN,\n      payload: order\n       };\n};\n\nexport const filterBySource = (name) => {\n console.log('actions filterBySource');\n  return {\n      type: \"FILTER_BY_SOURCE\",\n      payload: name\n        };\n};\nexport const aumentarContador = () => {\n   return {    type: AUMENTA_CONTADOR    }\n};\nexport const getTemps = () => {\n   return function(dispatch){\n   fetch('http://localhost:3001/temperaments').then(response => response.json()).then(data => dispatch({type: OBT_TEMPS, payload: data}))\n  }\n}\nexport const seteaPerrosX = (perros) => {\n console.log('payload actions: ',perros,'.');\n return {   \n   type: 'SET_PERROS',\n   payload: perros,\n };\n};\n\nexport const filtrarPerros = (idperro) => {\n return async (dispatch) => {\n   try {\n     console.log('actions filtrarPerros:', idperro);\n     const arreglo = await axios.get(`http://localhost:${port}/dogtemp/${idperro}`);\n     console.log('arreglo actions', arreglo, '.');\n     if (arreglo) {\n       const perrosResultantes = [];\n       const promises = arreglo.data.map((id) =>\n         axios(`http://localhost:${port}/dogs/${id}`)\n           .then(({ data }) => {\n             perrosResultantes.push(data);\n           })\n           .catch((error) => {\n             console.error(`Error ID ${idperro}:`, error);\n           })\n       );\n       await Promise.all(promises);\n       dispatch(setPerros2(perrosResultantes));\n     }\n   } catch (error) {\n     console.error(error);\n   }\n };\n};\n\nexport const setPerros2 = (perros) => {\n return {\n   type: 'SET_PERROS2',\n   payload: perros,\n };\n};\n\nexport const onFiltroId = () => {\n return function(dispatch){\n }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}