{"ast":null,"code":"import perrosx1 from './datadummy';\nimport { GET_PERRO, GET_PERROS, FILTER_BY_SOURCE, ORDER_BY_SOURCE, ORDER_BY_SOURCE2 } from './actions';\nconst initialState = {\n  perros2: [],\n  perrospostres: perrosx1,\n  tuhermana: 'nasty',\n  lamagui: 'oli'\n};\n/**reducer es quien sabe que hacer en el estado global  */\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PERROS:\n      console.log('GET_PERROS');\n      return {\n        ...state,\n        perros2: action.payload\n      };\n    case GET_PERRO:\n      console.log('GET_PERRO payload:', action.payload);\n      return {\n        ...state,\n        perros2: action.payload\n      };\n    case ORDER_BY_SOURCE2:\n      const orderPerro2 = state.perros2.sort((a, b) => {\n        if (action.payload === \"A\") {\n          if (a.weight.metric < b.weight.metric) return -1;\n          if (b.weight.metric < a.weight.metric) return 1;\n          return 0;\n        }\n        // DESCENDENTE\n        else {\n          if (a.weight.metric < b.weight.metric) return 1;\n          if (b.weight.metric < a.weight.metric) return -1;\n          return {\n            ...state,\n            perros2: [...orderPerro]\n          };\n        }\n        function getPesoMin(perro) {\n          const [min] = perro.weight.metric.split(\" - \");\n          return parseInt(min);\n        }\n        function getPesoMax(perro) {\n          const [, max] = perro.weight.metric.split(\" - \");\n          return parseInt(max);\n        }\n      });\n      break;\n    case ORDER_BY_SOURCE:\n      const orderPerro = state.perros2.sort((a, b) => {\n        if (action.payload === \"A\") {\n          if (a.name < b.name) return -1;\n          if (b.name < a.name) return 1;\n          return 0;\n        }\n        // DESCENDENTE\n        else {\n          if (a.name < b.name) return 1;\n          if (b.name < a.name) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        perros2: [...orderPerro]\n      };\n    default:\n      return {\n        ...state\n      };\n    /**una copia del estado */\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["perrosx1","GET_PERRO","GET_PERROS","FILTER_BY_SOURCE","ORDER_BY_SOURCE","ORDER_BY_SOURCE2","initialState","perros2","perrospostres","tuhermana","lamagui","reducer","state","arguments","length","undefined","action","type","console","log","payload","orderPerro2","sort","a","b","weight","metric","orderPerro","getPesoMin","perro","min","split","parseInt","getPesoMax","max","name"],"sources":["/home/felipe0/Escritorio/ProyectoInd1/PI-Dogs-main/PI-Dogs-main/client/src/redux/reducer.js"],"sourcesContent":["import perrosx1 from './datadummy';\n\nimport { GET_PERRO, GET_PERROS, FILTER_BY_SOURCE, ORDER_BY_SOURCE, ORDER_BY_SOURCE2} from './actions';\n\nconst initialState = {  \n perros2 : [],\n perrospostres: perrosx1, \n tuhermana : 'nasty',\n lamagui: 'oli'\n}\n/**reducer es quien sabe que hacer en el estado global  */\n\nconst reducer = (state = initialState, action) => {\n switch(action.type){\n  case GET_PERROS:\n   console.log('GET_PERROS');\n   return { ...state, perros2: action.payload  };\n\n  case GET_PERRO:\n   console.log('GET_PERRO payload:', action.payload);\n   return { ...state, perros2: action.payload } \n\n\n   case ORDER_BY_SOURCE2:\n   const orderPerro2 = state.perros2.sort((a, b)=> {\n\n    if(action.payload === \"A\") {     \n        if(a.weight.metric < b.weight.metric ) return -1;\n        if(b.weight.metric < a.weight.metric) return 1;\n        return 0   \n       }\n    // DESCENDENTE\n    else {\n        if(a.weight.metric < b.weight.metric) return 1\n        if(b.weight.metric < a.weight.metric) return - 1\n        return {...state, perros2: [...orderPerro]  }  \n       }  \n        \n        function getPesoMin(perro) {\n         const [min] = perro.weight.metric.split(\" - \");\n         return parseInt(min);\n       }\n       \n       function getPesoMax(perro) {\n         const [, max] = perro.weight.metric.split(\" - \");\n         return parseInt(max);\n       }\n    })\n    break;\n\n   case ORDER_BY_SOURCE:\n     const orderPerro = state.perros2.sort((a, b)=> {\n      if(action.payload === \"A\") {\n          if(a.name < b.name ) return -1;\n          if(b.name < a.name) return 1\n          return 0  }\n      // DESCENDENTE\n      else {\n          if(a.name < b.name) return 1\n          if(b.name < a.name) return - 1\n          return 0  }  \n    })\n    return { ...state,   perros2: [...orderPerro] }\n   \n  default:\n   return { ...state };  /**una copia del estado */\n }\n};\n\nexport default reducer"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,aAAa;AAElC,SAASC,SAAS,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,gBAAgB,QAAO,WAAW;AAErG,MAAMC,YAAY,GAAG;EACpBC,OAAO,EAAG,EAAE;EACZC,aAAa,EAAER,QAAQ;EACvBS,SAAS,EAAG,OAAO;EACnBC,OAAO,EAAE;AACV,CAAC;AACD;;AAEA,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGP,YAAY;EAAA,IAAEU,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5C,QAAOC,MAAM,CAACC,IAAI;IACjB,KAAKf,UAAU;MACdgB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,OAAO;QAAE,GAAGP,KAAK;QAAEL,OAAO,EAAES,MAAM,CAACI;MAAS,CAAC;IAE9C,KAAKnB,SAAS;MACbiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,MAAM,CAACI,OAAO,CAAC;MACjD,OAAO;QAAE,GAAGR,KAAK;QAAEL,OAAO,EAAES,MAAM,CAACI;MAAQ,CAAC;IAG5C,KAAKf,gBAAgB;MACrB,MAAMgB,WAAW,GAAGT,KAAK,CAACL,OAAO,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;QAE/C,IAAGR,MAAM,CAACI,OAAO,KAAK,GAAG,EAAE;UACvB,IAAGG,CAAC,CAACE,MAAM,CAACC,MAAM,GAAGF,CAAC,CAACC,MAAM,CAACC,MAAM,EAAG,OAAO,CAAC,CAAC;UAChD,IAAGF,CAAC,CAACC,MAAM,CAACC,MAAM,GAAGH,CAAC,CAACE,MAAM,CAACC,MAAM,EAAE,OAAO,CAAC;UAC9C,OAAO,CAAC;QACT;QACH;QAAA,KACK;UACD,IAAGH,CAAC,CAACE,MAAM,CAACC,MAAM,GAAGF,CAAC,CAACC,MAAM,CAACC,MAAM,EAAE,OAAO,CAAC;UAC9C,IAAGF,CAAC,CAACC,MAAM,CAACC,MAAM,GAAGH,CAAC,CAACE,MAAM,CAACC,MAAM,EAAE,OAAO,CAAE,CAAC;UAChD,OAAO;YAAC,GAAGd,KAAK;YAAEL,OAAO,EAAE,CAAC,GAAGoB,UAAU;UAAG,CAAC;QAC9C;QAEC,SAASC,UAAUA,CAACC,KAAK,EAAE;UAC1B,MAAM,CAACC,GAAG,CAAC,GAAGD,KAAK,CAACJ,MAAM,CAACC,MAAM,CAACK,KAAK,CAAC,KAAK,CAAC;UAC9C,OAAOC,QAAQ,CAACF,GAAG,CAAC;QACtB;QAEA,SAASG,UAAUA,CAACJ,KAAK,EAAE;UACzB,MAAM,GAAGK,GAAG,CAAC,GAAGL,KAAK,CAACJ,MAAM,CAACC,MAAM,CAACK,KAAK,CAAC,KAAK,CAAC;UAChD,OAAOC,QAAQ,CAACE,GAAG,CAAC;QACtB;MACH,CAAC,CAAC;MACF;IAED,KAAK9B,eAAe;MAClB,MAAMuB,UAAU,GAAGf,KAAK,CAACL,OAAO,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;QAC9C,IAAGR,MAAM,CAACI,OAAO,KAAK,GAAG,EAAE;UACvB,IAAGG,CAAC,CAACY,IAAI,GAAGX,CAAC,CAACW,IAAI,EAAG,OAAO,CAAC,CAAC;UAC9B,IAAGX,CAAC,CAACW,IAAI,GAAGZ,CAAC,CAACY,IAAI,EAAE,OAAO,CAAC;UAC5B,OAAO,CAAC;QAAE;QACd;QAAA,KACK;UACD,IAAGZ,CAAC,CAACY,IAAI,GAAGX,CAAC,CAACW,IAAI,EAAE,OAAO,CAAC;UAC5B,IAAGX,CAAC,CAACW,IAAI,GAAGZ,CAAC,CAACY,IAAI,EAAE,OAAO,CAAE,CAAC;UAC9B,OAAO,CAAC;QAAE;MAChB,CAAC,CAAC;MACF,OAAO;QAAE,GAAGvB,KAAK;QAAIL,OAAO,EAAE,CAAC,GAAGoB,UAAU;MAAE,CAAC;IAEjD;MACC,OAAO;QAAE,GAAGf;MAAM,CAAC;IAAG;EACxB;AACD,CAAC;;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}